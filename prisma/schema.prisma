generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  image         String?
  name          String
  office        String
  dateNaissance DateTime
  rg            String
  adress        String
  ctps          String
  issuingBody   String
  number        String
  cpf           String   @unique
  cep           String
  complement    String
  manager       Boolean  @default(false)

  password String?

  evaluationsAsEvaluator Avaliation[]     @relation("evaluator")
  evaluationsAsEvaluated Avaliation[]     @relation("evaluated")
  UserAssignment         UserAssignment[]
}

model Avaliation {
  id          String   @id @default(cuid())
  dataCreated DateTime @default(now())

  avaliationType String

  evaluatorId String
  evaluatedId String
  userAssignmentId String?

  evaluator User @relation("evaluator", fields: [evaluatorId], references: [id])
  evaluated User @relation("evaluated", fields: [evaluatedId], references: [id])
  UserAssignment   UserAssignment? @relation(fields: [userAssignmentId], references: [id])

  asnwers          Answer[]
}

model Question {
  id       String @id @default(cuid())
  title    String
  question String

  answers Answer[]
}

model Answer {
  id            String @id @default(cuid())
  answer        Int
  justificative String

  Avaliation   Avaliation? @relation(fields: [avaliationId], references: [id])
  avaliationId String?

  Question   Question? @relation(fields: [questionId], references: [id])
  questionId String?
}

model Assignment {
  id             String           @id @default(cuid())
  type           String
  dataAnswered   DateTime
  dateConcluded  DateTime
  UserAssignment UserAssignment[]
}

model UserAssignment {
  id           String     @id @default(cuid())
  userId       String
  assignmentId String
  user         User       @relation(fields: [userId], references: [id])
  assignment   Assignment @relation(fields: [assignmentId], references: [id], onDelete: Cascade)

  media  Float?
  status Boolean @default(false)

  avaliations Avaliation[]

  @@unique([userId, assignmentId])
}
